
<div class="tooltips">
        <img src="./images/help.jpg" with="25" height="25" alt="Ajuda" />
        <span class="tooltiptext">Nesta p&aacute;gina poder&aacute; registar o desaparecimento de SI.</span>
</div>
<div>
<div id="register" style="float: left; margin-left: 2em; margin-right: 2em;">
    <h1>Registar Desaparecimento</h1>
    <form id="registerForm" onsubmit="createMissing({{userId}}); return false">
        <div class="form-group">
            <label>Nome do Animal</label>
            <input class="input-form" type="text" name="animalName" required />
            <span class="highlight"></span>
            <span class="bar"></span>
            <span class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Número do Chip</label>
            <input class="input-form" type="number" min="0" max="999999999999999" name="chipNumber" />
            <span class="highlight"></span>
            <span class="bar"></span>
            <span class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Local do Desaparecimento</label>
            <input class="input-form" type="text" name="placeName" placeholder="cidade, área e\ou rua" required />
            <span class="highlight"></span>
            <span class="bar"></span>
            <span class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Notas</label>
            <input class="input-form" type="text" name="placeName" placeholder="algo que possa ser útil na identificação do animal" />
            <span class="highlight"></span>
            <span class="bar"></span>
            <span class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Espécie</label>
            <select name="species" class="input-form">
                <option value="Dog" selected>Cão</option>
                <option value="Cat">Gato</option>
            </select>
            <span class="highlight"></span>
            <span class="bar"></span>
            <span class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Tamanho</label>
            <select name="size" class="input-form">
                <option value="Small">Pequeno</option>
                <option value="Medium" selected>Médio</option>
                <option value="Large">Grande</option>
            </select>
            <span class="highlight"></span>
            <span class="bar"></span>
            <span class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Género</label>
            <select name="gender" class="input-form">
                <option value='Male' selected>Macho</option>
                <option value='Female'>Fêmea</option>
            </select>
            <span class="highlight"></span>
            <span class="bar"></span>
            <span class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Data do desaparecimento</label>
            <input class="input-form" type="date" name="missingDate" required />
            <span class="highlight"></span>
            <span class="bar"></span>
            <span class="text-danger"></span>
        </div>
        <div id="submit" class="form-group">
            <button type="submit" class="confirmationButton">Registar</button>
        </div>
    </form>
</div>

<div id="googleMap" style="float: left; width:50%; height:650px; margin: 2em auto"></div>
<script type="text/javascript" async="true" defer="true"
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBJRGxosiyNAQ2bhOh3iooZXVu4qw8y27Y&callback=initMap"></script>
<script type="text/html" async="true" defer="true"
    src="https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyBJRGxosiyNAQ2bhOh3iooZXVu4qw8y27Y&callback=initMap"></script>
<script>

    let mapProp = null;
    let map = null;
    let infoWindow = null;
    var geocoder;


    function initMap() {
        mapProp = {
            center: new google.maps.LatLng(38.533333, -8.9),
            zoom: 13,
            mapTypeId: google.maps.MapTypeId.HYBRID,
            panControl: true,
            zoomControl: true,
            mapTypeControl: true,
            scaleControl: true,
            streetViewControl: true,
            overviewMapControl: true,
            rotateControl: true
        };
        map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        infoWindow = new google.maps.InfoWindow;

        // chamada ajax
        populateMap();

        /*
                {{#missing}}
                    insertMarker({{latitude}}, {{longitude}}, "{{label}}");
                {{/missing}}
        */
        // Try HTML5 geolocation.
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                let pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                infoWindow.setPosition(pos);
                infoWindow.setContent('Estimativa da sua localização.');
                infoWindow.open(map);
                map.setCenter(pos);
            }, function () {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
    }

    // TODO: alterar position para a de um animal
    /*let marker = new google.maps.Marker({ position: mapProp.center });
    marker.setMap(map);*/

    // Zoom to 9 when clicking on marker
    /*google.maps.event.addListener(marker, 'click', function () {
        map.setZoom(15);
        map.setCenter(marker.getPosition());
    });*/

    //google.maps.event.addListener(map, 'mousedown', function (event) {
    //console.log(event.latLng)
    //console.log(event)
    //map.setZoom(15);
    //map.setCenter(marker.getPosition());

    //insertMarker(event.latLng.lat().toFixed(6), event.latLng.lng().toFixed(6));

    //console.log("EVENT: ", event.latLng.lat().toFixed(6))
    //console.log("EVENT: ", event.latLng.lon().toFixed(6))
    //getLatLong("setúbal")
    //});




    //var add = document.getElementById("LocationAddress");

    /*
        function getLatLong(address) {
            geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    console.log(results[0].geometry.location.lat())
                    console.log(results[0].geometry.location.lng())
                    //document.getElementById("LocationLat").value = results[0].geometry.location.lat();
                    //document.getElementById("LocationLon").value = results[0].geometry.location.lng();
                } else {
                    alert("Geocode was not successful for the following reason: " + status);
                }
            });
        }
        */

    function insertMarker(lat, lon, label, missingId) {
        let position = new google.maps.LatLng(lat, lon);
        let marker = new google.maps.Marker({
            position: position,
            label: {
                text: label,
                fontFamily: "Verdana, Geneva, sans-serif",
                fontWeight: "bold",
                color: "black",
                fontSize: "22px"
            },
            missingId: missingId
        });
        marker.setClickable(true);
        marker.setMap(map);

        google.maps.event.addListener(marker, "click", function () {
            window.location.replace('/missing/' + this.missingId);
            /*
            console.log("this: ", this);
            console.log(this.missingId + ": " + this.label.text);
            */

        });
    }


    function populateMap() {
        {{#each missingAnimals }}
        insertMarker({{ lat }}, {{ lon }}, "{{animalName}}", {{ missingId }});
        {{/each}}


            /*
            let xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    let response = JSON.parse(this.responseText);
                    if(response){
                        response.forEach(elem => {
                            insertMarker(elem.latitude, elem.longitude, elem.label, elem.missingId);
                        });
                    }
                }
            };
            xhttp.open("GET", "/missingInMap", true);
            xhttp.send();
            */
    }


</script>

</div>
